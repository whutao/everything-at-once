name: Package CI

on:
  push:
    branches:
      - master
    tags:
      - '*'

jobs:

  # # =============================================
  # #           Swift language linter
  # # =============================================
  # swift-linter:
  #   name: "Swift linter"
  #   runs-on: ubuntu-latest
  #   timeout-minutes: 10
  #   steps:
  #     - uses: actions/checkout@v3
  #     - uses: norio-nomura/action-swiftlint@3.2.1
  
  # # =============================================
  # #           Source files changes tracker
  # # =============================================
  # sources-changes:
  #   name: "Source files changes"
  #   needs: [swift-linter]
  #   timeout-minutes: 10
  #   runs-on: ubuntu-latest
  #   outputs:
  #     swift: ${{ steps.filter.outputs.swift }}
  #   steps:
  #     - uses: actions/checkout@v2
  #     - uses: dorny/paths-filter@v2
  #       id: filter
  #       with:
  #         filters: |
  #           swift:
  #             - Sources
  
  # # =============================================
  # #           Test files changes tracker
  # # =============================================
  # tests-changes:
  #   name: "Test files changes"
  #   needs: [swift-linter]
  #   timeout-minutes: 10
  #   runs-on: ubuntu-latest
  #   outputs:
  #     swift: ${{ steps.filter.outputs.swift }}
  #   steps:
  #     - uses: actions/checkout@v2
  #     - uses: dorny/paths-filter@v2
  #       id: filter
  #       with:
  #         filters: |
  #           swift:
  #             - Tests
                
  # =============================================
  #           Run unit tests
  # =============================================
  unit-tests:
    name: "Unit tests"
    # needs: [sources-changes, tests-changes]
    # if: ${{ (needs.sources-changes.outputs.swift != 'true') && (needs.test-changes.outputs.swift != 'true') }}
    timeout-minutes: 30
    runs-on: macos-latest
    strategy:
      fail-fast: true
      matrix:
        os-version: [
          13.0, 13.1, 13.2, 13.3, 13.4, 13.5, 13.6, 13.7,
          14.0, 14.1, 14.2, 14.3, 14.4, 14.5, 14.6,
          15.0, 15.1, 15.2, 15.3, 15.4, 15.5,
        ]
        device: ['iPhone 11', 'iPhone 13']
    steps:
      - uses: fwal/setup-swift@v1.14.0
        with:
          swift-version: "5.5"
      - uses: maxim-lobanov/setup-xcode@v1
      - uses: actions/checkout@v3
      - name: Execute tests
        run: |
          xcodebuild \
            -workspace .swiftpm/xcode/package.xcworkspace \
            -scheme EverythingAtOnce \
            -sdk iphonesimulator \
            -destination 'platform=iOS Simulator,name=iPhone 13,OS=${{ matrix.os-version }}' \
            test
